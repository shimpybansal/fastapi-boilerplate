name: Test and Build

on:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create and start virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Get Poetry cache files location
        id: poetry-cache
        # run: echo "::set-output name=dir::$(poetry config cache-dir)"
        run: echo "dir=$(poetry config cache-dir)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.poetry-cache.outputs.dir }}
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Dependencies with Poetry
        run: poetry install

      - name: Check Code Formatting
        run: bash scripts/check_format.sh

      - name: Run Tests
        run: bash scripts/test.sh

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/fastapi-boilerplate:latest

  documentation:
    needs: [test, build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11

      - name: Create and start virtual environment
        run: |
          python -m venv .venv
          source .venv/bin/activate

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Get Poetry cache files location
        id: poetry-cache
        run: echo "dir=$(poetry config cache-dir)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.poetry-cache.outputs.dir }}
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install Dependencies with Poetry
        run: poetry install

      - name: Generate Documentation
        run: bash scripts/documentation.sh

      - name: Commit Documentation Changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add documentation/*
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
          else
            git commit -m "Update documentation"
            git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          fi
